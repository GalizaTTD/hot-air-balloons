#define flight_state() (var[0xE2, 0, 0xFF])

template balloonTemplate(y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    [   0,		0 + y,		64,		64,		-32,		-32, ANIM]
    [  65,		0 + y,		64,		64,		-32,		-32, ANIM]
    [ 130,		0 + y,		64,		64,		-32,		-32, ANIM]
    [ 195,		0 + y,		64,		64,		-32,		-32, ANIM]
    [ 260,		0 + y,		64,		64,		-32,		-32, ANIM]
    [ 325,		0 + y,		64,		64,		-32,		-32, ANIM]
    [ 390,		0 + y,		64,		64,		-32,		-32, ANIM]
    [ 455,		0 + y,		64,		64,		-32,		-32, ANIM]
}
spriteset (balloonPurchase_SpriteSet, "src/gfx/balloons/COMPANY_COLORED.gimp.png") {	 [  520,		0,		18,		24,		-9,		-12, ANIM]  }
spriteset (balloonRotor_Spriteset, "src/gfx/balloons/COMPANY_COLORED.gimp.png") {	 [  520,		25,		1,		1,		0,		0, ANIM]  }

// Include sprites for each balloon

#include "_companyColored.pnml"
#include "_Rainbow.pnml"


switch (FEAT_AIRCRAFT, SELF, HotAirBallon_Sprites, cargo_subtype)
{
  1: HotAirBalloon_Rainbow;
     HotAirBalloon_CompanyColored;
}
switch (FEAT_AIRCRAFT, SELF, HotAirBallon_cargo_subtype_text, cargo_subtype)
{
  0: string(STR_HAB_2CC);
  1: string(STR_HAB_RAINBOW);
     return CB_RESULT_NO_TEXT;
}


switch (FEAT_AIRCRAFT, PARENT, balloonMotionCounterSoundSwitch, motion_counter % 16) {
	1:  sound("src/wav/hotairballoon.wav");
	CB_RESULT_NO_SOUND;
}
switch (FEAT_AIRCRAFT, SELF, balloonSounds, flight_state())
{
   16..20: balloonMotionCounterSoundSwitch; // Flight
   23     : sound("src/wav/hotairballoon.wav"); // Airport Take Off
   26     : sound("src/wav/hotairballoon.wav"); // Heliport Take Off
   return CB_RESULT_NO_SOUND; // Runway, etc..
}

item (FEAT_AIRCRAFT, Balloon)
{
   property
   {
      // common properties
      name:                         string(STR_HOT_AIR_BALLOON);
      climates_available:				ALL_CLIMATES;
      introduction_date:            date(1780, 1, 1);
      sprite_id:						   SPRITE_ID_NEW_AIRCRAFT; //use custom sprites

      // Spec
      acceleration:                    1;   // in 1 mph/day
      range:                           165;
      speed:                           25 km/h;

      // model
      aircraft_type:                AIRCRAFT_TYPE_HELICOPTER;
      model_life:						   VEHICLE_NEVER_EXPIRES;
      vehicle_life:					   20;
      retire_early:					   0;
      reliability_decay:				0;

      // cargo
      passenger_capacity:           3;
      mail_capacity:                1;
      cargo_age_period:             0; // ageing disabled
      refittable_cargo_classes:		NO_CARGO_CLASS;
      non_refittable_cargo_classes:	NO_CARGO_CLASS;
      cargo_allow_refit:				[PASS];
      loading_speed:					   10;

      // Costs
      cost_factor:					0;
      running_cost_factor:			0;

      // Flags
      /* sound_effect:					CB_RESULT_NO_SOUND; */
      misc_flags:						bitmask(AIRCRAFT_FLAG_2CC);
   }
   graphics {
      default: HotAirBallon_Sprites;
      purchase: balloonPurchase_SpriteSet;
      cargo_subtype_text: HotAirBallon_cargo_subtype_text;
      /* colour_mapping: PALETTE_CC_FIRST; */
      /* running_cost_factor: ATR_42_300_running_cost_factor; */
      sound_effect: balloonSounds;
      rotor: balloonRotor_Spriteset;

   }
}